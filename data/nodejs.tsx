import type { Command } from "./types"

export const nodejsCommands: Command[] = [
  {
    id: "node",
    name: "node",
    description: "Runs a JavaScript file or starts the REPL mode",
    syntax: "node [options] [file] [arguments]",
    example: "node app.js",
    category: "nodejs",
  },
  {
    id: "node-repl",
    name: "node",
    description: "Starts the Node.js REPL (Read-Eval-Print Loop) interactive shell",
    syntax: "node",
    example: "node",
    category: "nodejs",
  },
  {
    id: "node-inspect",
    name: "node --inspect",
    description: "Enables the inspector for debugging",
    syntax: "node --inspect [file]",
    example: "node --inspect app.js",
    category: "nodejs",
  },
  {
    id: "npm-init",
    name: "npm init",
    description: "Creates a package.json file",
    syntax: "npm init [-y|--yes]",
    example: "npm init -y",
    category: "package-management",
  },
  {
    id: "npm-install",
    name: "npm install",
    description: "Installs packages",
    syntax: "npm install [package] [--save|--save-dev]",
    example: "npm install express --save",
    category: "package-management",
  },
  {
    id: "npm-uninstall",
    name: "npm uninstall",
    description: "Uninstalls packages",
    syntax: "npm uninstall [package]",
    example: "npm uninstall lodash",
    category: "package-management",
  },
  {
    id: "npm-run",
    name: "npm run",
    description: "Runs a script defined in package.json",
    syntax: "npm run [script]",
    example: "npm run dev",
    category: "package-management",
  },
  {
    id: "npm-start",
    name: "npm start",
    description: "Runs the start script defined in package.json",
    syntax: "npm start",
    example: "npm start",
    category: "package-management",
  },
  {
    id: "npm-test",
    name: "npm test",
    description: "Runs the test script defined in package.json",
    syntax: "npm test",
    example: "npm test",
    category: "package-management",
  },
  {
    id: "npm-update",
    name: "npm update",
    description: "Updates packages to their latest version",
    syntax: "npm update [package]",
    example: "npm update",
    category: "package-management",
  },
  {
    id: "npm-list",
    name: "npm list",
    description: "Lists installed packages",
    syntax: "npm list [--depth=n]",
    example: "npm list --depth=0",
    category: "package-management",
  },
  {
    id: "npx",
    name: "npx",
    description: "Executes a package without installing it",
    syntax: "npx [options] <command>[@version] [command-arg]...",
    example: "npx create-react-app my-app",
    category: "package-management",
  },
  {
    id: "npm-version",
    name: "npm version",
    description: "Bumps a package version",
    syntax: "npm version [<newversion> | major | minor | patch]",
    example: "npm version patch",
    category: "package-management",
  },
  {
    id: "npm-audit",
    name: "npm audit",
    description: "Scans your project for vulnerabilities",
    syntax: "npm audit [fix]",
    example: "npm audit fix",
    category: "package-management",
  },
  {
    id: "npm-publish",
    name: "npm publish",
    description: "Publishes a package to the npm registry",
    syntax: "npm publish [folder]",
    example: "npm publish",
    category: "package-management",
  },
  {
    id: "node-env",
    name: "NODE_ENV",
    description: "Environment variable that specifies the environment in which the Node.js application is running",
    syntax: "NODE_ENV=value node app.js",
    example: "NODE_ENV=production node app.js",
    category: "nodejs",
  },
  {
    id: "npm-ci",
    name: "npm ci",
    description: "Installs dependencies from package-lock.json, ideal for CI/CD pipelines",
    syntax: "npm ci",
    example: "npm ci",
    category: "package-management",
  },
  {
    id: "yarn",
    name: "yarn",
    description: "Alternative package manager for Node.js",
    syntax: "yarn [command]",
    example: "yarn add express",
    category: "package-management",
  },
  {
    id: "node-env-vars",
    name: "process.env",
    description: "Access environment variables in Node.js",
    syntax: "process.env.VARIABLE_NAME",
    example: "const port = process.env.PORT || 3000;",
    category: "nodejs",
  },
  {
    id: "nodemon",
    name: "nodemon",
    description: "Monitors for changes and automatically restarts the server",
    syntax: "nodemon [file]",
    example: "nodemon server.js",
    category: "nodejs",
  },
]
